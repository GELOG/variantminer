<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>ca.etsmtl.genomic</groupId>
    <artifactId>variantminer</artifactId>
    <version>0.1-SNAPSHOT</version>
    <name>HelloWorldScala</name>

    <!--
    REFERENCES

    * Adam IBS
      * https://github.com/GELOG/adam-ibs/blob/master/pom.xml
      * https://github.com/GELOG/adam-ibs/blob/master/adam-ibs-core/pom.xml

    * ADAM Avro Parquet
      * https://github.com/GELOG/example-avro-parquet-spark/blob/master/pom.xml
      * https://github.com/AndreSchumacher/avro-parquet-spark-example/blob/master/pom.xml

    * BDG-Formats:
      * https://github.com/GELOG/bdg-formats/blob/master/pom.xml

    * ADAM
      * https://github.com/bigdatagenomics/adam/blob/master/pom.xml
      * https://github.com/bigdatagenomics/adam/blob/master/adam-core/pom.xml

    * Spark
      * https://github.com/apache/spark/blob/branch-1.5/pom.xml
      *
    -->

    <properties>
        <java.version>1.8</java.version>
        <maven.version>3.3.3</maven.version>
        <scala.binary.version>2.10</scala.binary.version>
        <scala.version>2.10.4</scala.version>
        <spark.version>1.5.1</spark.version>
        <!--
         Compilation works, but complains about missing signature:
                "akka.remote.RemoteActorRefProvider.<init>(
                java.lang.String,
                akka.actor.ActorSystem$Settings,
                akka.event.EventStream,
                akka.actor.Scheduler,
                akka.actor.DynamicAccess)"

         which was removed from Akka after version 2.1.4. However, Spark 1.5's pom uses 2.3.11 which does not
         contain the above signature.

         Setting Akka to 2.1.4 in the pom.xml still throws a missing signature error.

         Apparently Akka is part of Scala now (since Scala 2.10.4 ?) => That could explains the conflicting issues.
         http://scala-lang.org/news/2.10.4

         "Starting with Scala 2.11.0, the Scala Actors library is deprecated. Already in Scala 2.10.0 the default actor library is Akka."
         http://docs.scala-lang.org/overviews/core/actors-migration-guide.html

         According to https://en.wikipedia.org/wiki/Akka_(toolkit)

         Akka 2.1.0 is part of Scala 2.10.x
         Akka 2.3.2 is part of Scala 2.11.x

         Now, Scala 2.11.x is still broken.

         Also looks like Spark 1.4.1 uses a patched version of Akka named "2.3.4-spark". How does spark matches

         Scala releases announcements
         https://groups.google.com/forum/#!forum/scala-announce

         Akka Versions:         http://akka.io/docs/

         * Akka 2.4.0   ->   Scala 2.11 / 2.12.0-M2    ->   Java 8+  (current stable)
         * Akka 2.3.14  ->   Scala 2.10 / 2.11         ->   Java 6+
         * Akka 2.2.5   ->   Scala 2.10                ->   Java 6+
         * Akka 2.1.4   ->   Scala 2.10                ->   Java 6+
         * Akka 2.0.5   ->   Scala 2.9                 ->   Java 6+
         * Akka 1.3.1   ->   Scala 2.9                 ->   Java 6+

         * Why is the akka lib available separately if it is included in Scala, or how does Spark override it ??

         The problem could be the java version, the packaging method (should use .jar instead of .class for dependencies)
         of should use less plugin (shadow vs compiler)
          -->
        <akka.group>com.typesafe.akka</akka.group>
        <akka.version>2.3.4</akka.version>

        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    </properties>


    <prerequisites>
        <maven>${maven.version}</maven>
    </prerequisites>


    <dependencies>
        <dependency>
            <groupId>com.twitter</groupId>
            <artifactId>chill_2.10</artifactId>
            <version>0.5.0</version>
            <exclusions>
                <exclusion>
                    <!-- make sure wrong scala version is not pulled in -->
                    <groupId>org.scala-lang</groupId>
                    <artifactId>scala-library</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>org.json4s</groupId>
            <artifactId>json4s-core_2.10</artifactId>
            <version>3.2.10</version>
            <exclusions>
                <exclusion>
                    <!-- make sure wrong scala version is not pulled in -->
                    <groupId>org.scala-lang</groupId>
                    <artifactId>scala-library</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.scala-lang</groupId>
                    <artifactId>scalap</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>org.json4s</groupId>
            <artifactId>json4s-jackson_2.10</artifactId>
            <version>3.2.10</version>
            <exclusions>
                <exclusion>
                    <groupId>org.scala-lang</groupId>
                    <artifactId>scala-library</artifactId>
                </exclusion>
            </exclusions>
        </dependency>


        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-library</artifactId>
            <version>${scala.version}</version>
        </dependency>


        <!-- These dependencies below are included here to solve conflictual dependencies.
             They can be safely removed. -->
        <dependency>
            <groupId>com.typesafe.akka</groupId>
            <artifactId>akka-remote_2.10</artifactId>
            <version>${akka.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.scala-lang</groupId>
                    <artifactId>scala-library</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>com.typesafe.akka</groupId>
            <artifactId>akka-actor_2.10</artifactId>
            <version>${akka.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.scala-lang</groupId>
                    <artifactId>scala-library</artifactId>
                </exclusion>
            </exclusions>
        </dependency>


        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-core_${scala.binary.version}</artifactId>
            <version>${spark.version}</version>
        </dependency>
    </dependencies>


    <build>
        <plugins>
            <!-- maven-assembly-plugin: Aggregate the project output along with its dependencies, modules,
                                        site documentation, and other files into a single distributable archive. -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>2.4</version>
                <configuration>
                    <descriptorRefs>
                        <descriptorRef>jar-with-dependencies</descriptorRef>
                    </descriptorRefs>
                    <archive>
                        <manifest>
                            <addClasspath>true</addClasspath>
                            <mainClass>HelloSpark</mainClass>
                        </manifest>
                    </archive>
                </configuration>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>


            <!-- maven-shade-plugin: package the artifact in an uber-jar, including its dependencies and to shade - i.e. rename - the packages of some of the dependencies.

            More specifically solves this problem: "no-configuration-setting-found-for-key-akka-version"

            We should probably remove the maven-assembly-plugin if we use the shade-plugin...
            
            http://stackoverflow.com/questions/31011243/no-configuration-setting-found-for-key-akka-version
            http://doc.akka.io/docs/akka/snapshot/general/configuration.html#When_using_JarJar__OneJar__Assembly_or_any_jar-bundler
            -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>1.5</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <shadedArtifactAttached>true</shadedArtifactAttached>
                            <shadedClassifierName>allinone</shadedClassifierName>
                            <artifactSet>
                                <includes>
                                    <include>*:*</include>
                                </includes>
                            </artifactSet>
                            <transformers>
                                <transformer
                                        implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
                                    <resource>reference.conf</resource>
                                </transformer>
                                <transformer
                                        implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                    <manifestEntries>
                                        <Main-Class>HelloSpark</Main-Class>
                                    </manifestEntries>
                                </transformer>
                            </transformers>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- scala-maven-plugin: compiles / tests / runs / documents **Scala** code. -->
            <plugin>
                <groupId>net.alchim31.maven</groupId>
                <artifactId>scala-maven-plugin</artifactId>
                <version>3.2.2</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>compile</goal>
                            <goal>testCompile</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <scalaVersion>${scala.version}</scalaVersion>
                    <args>
                        <arg>-unchecked</arg>
                        <arg>-deprecation</arg>
                        <arg>-feature</arg>
                        <arg>-nobootcp</arg><!-- workaround for https://issues.scala-lang.org/browse/SI-8358 -->
                    </args>
                    <jvmArgs>
                        <jvmArg>-Xms1024m</jvmArg>
                        <jvmArg>-Xmx1024m</jvmArg>
                    </jvmArgs>
                    <javacArgs>
                        <javacArg>-source</javacArg>
                        <javacArg>${java.version}</javacArg>
                        <javacArg>-target</javacArg>
                        <javacArg>${java.version}</javacArg>
                        <javacArg>-Xlint:all</javacArg>
                    </javacArgs>
                </configuration>
            </plugin>

        </plugins>
    </build>
</project>
